name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SNYK_SEVERITY_THRESHOLD: high
  DOCKER_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
  SONAR_ORG: ${{ secrets.SONARQUBE_ORG }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Maven manually
      run: |
        sudo apt-get update
        sudo apt-get install -y maven
        mvn --version

    - name: Install Snyk
      run: npm install -g snyk

    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Install Sonar Scanner
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner-cli-4.6.2.2472-linux.zip
        sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
        echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

    - name: Build, push, scan and analyze services
      run: |
        echo "üîç T√¨m c√°c service c√≥ pom.xml..."
        for pom_path in $(find . -name "pom.xml"); do
          dir=$(dirname "$pom_path")
          original_service=$(basename "$dir" | sed 's/[^a-zA-Z0-9_-]//g')
          service=$(echo "$original_service" | tr '[:upper:]' '[:lower:]')
          echo "‚û°Ô∏è X·ª≠ l√Ω service: $service"

          echo "üèó Build Maven project..."
          mvn -f "$dir/pom.xml" clean install -DskipTests

          echo "üê≥ Build Docker image..."
          docker buildx build --platform linux/amd64 -t "$DOCKER_ORG/$service:latest" "$dir" --push


          # echo "üöÄ Push Docker image..."
          # docker push $DOCKER_ORG/$service:latest

          echo "üîí Monitor image v·ªõi Snyk..."
          snyk container monitor $DOCKER_ORG/$service:latest --severity-threshold=$SNYK_SEVERITY_THRESHOLD || exit 1

          echo "üìä SonarCloud scan..."
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_ORG-$service \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.projectBaseDir="$dir" \
            -Dsonar.java.binaries="$dir/target/classes" \
            -Dsonar.projectVersion=1.0.${{ github.run_number }}
        done
