name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SNYK_SEVERITY_THRESHOLD: high
  DOCKER_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
  SONAR_ORG: ${{ secrets.SONARQUBE_ORG }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven
          mvn --version

      - name: Build and push Docker images for services
        run: |
          echo "üîç T√¨m c√°c service c√≥ pom.xml..."
          for pom_path in $(find . -name "pom.xml"); do
            dir=$(dirname "$pom_path")
            service=$(basename "$dir" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_-]//g')
            echo "‚û°Ô∏è X·ª≠ l√Ω service: $service"

            echo "üèó Maven build..."
            mvn -f "$dir/pom.xml" clean install -DskipTests

            echo "üê≥ Docker build & push..."
            docker buildx build --platform linux/amd64 -t "$DOCKER_ORG/$service:latest" "$dir" --push
          done

  snyk-scan:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Scan Docker images with Snyk
        run: |
          for pom_path in $(find . -name "pom.xml"); do
            dir=$(dirname "$pom_path")
            service=$(basename "$dir" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9_-]//g')
            echo "üîí Snyk scan: $service"
            snyk container monitor $DOCKER_ORG/$service:latest --severity-threshold=$SNYK_SEVERITY_THRESHOLD || exit 1
          done

  sonarcloud:
    runs-on: ubuntu-latest
    needs: build-and-push

    strategy:
      matrix:
        service_dir: [ $(find . -name "pom.xml" -exec dirname {} \; | sed 's|^\./||') ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: ${{ matrix.service_dir }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_ORG }}-${{ matrix.service_dir }}
          SONAR_ORGANIZATION: ${{ env.SONAR_ORG }}
