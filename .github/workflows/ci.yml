name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SNYK_SEVERITY_THRESHOLD: high
  DOCKER_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
  SONAR_ORG: ${{ secrets.SONARQUBE_ORG }}

jobs:
  detect-services:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Find all services with pom.xml
        id: set-services
        run: |
          services=$(find . -name "pom.xml" -exec dirname {} \; | sed 's|^\./||' | jq -R . | jq -s .)
          echo "Detected services: $services"
          echo "services=$services" >> $GITHUB_OUTPUT

  sonarcloud:
    needs: detect-services
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service_dir: ${{ fromJson(needs.detect-services.outputs.services) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: ${{ matrix.service_dir }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_ORG }}-${{ matrix.service_dir }}
          SONAR_ORGANIZATION: ${{ env.SONAR_ORG }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ env.SONAR_ORG }}-${{ matrix.service_dir }}
          SONAR_ORGANIZATION: ${{ env.SONAR_ORG }}
