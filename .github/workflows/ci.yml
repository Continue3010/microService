name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    SNYK_SEVERITY_THRESHOLD: high
    DOCKER_ORG: ${{ secrets.DOCKERHUB_USERNAME }}  
    SONAR_ORG: ${{ secrets.SONARQUBE_ORG }}   
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Install Maven manually
      run: |
        sudo apt-get update
        sudo apt-get install -y maven
        mvn --version
    - name: Install Snyk
      run: |
        npm install -g snyk

    - name: Authenticate Snyk
      run: |
        snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Build and push images using Docker Compose
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push || exit 1
    - name: Install Sonar Scanner
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner-cli-4.6.2.2472-linux.zip
        sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
        echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH
        export JAVA_HOME=$JAVA_HOME_17_X64
        export PATH=$JAVA_HOME/bin:$PATH
    - name: Build and push images using Docker Compose
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push

    - name: Build, test and scan services
      run: |
        # Duy·ªát qua t·∫•t c·∫£ th∆∞ m·ª•c con trong th∆∞ m·ª•c g·ªëc (ho·∫∑c th∆∞ m·ª•c d·ªãch v·ª•)
         for pom in $(find . -name "pom.xml"); do
          dir=$(dirname "$pom")
          echo "‚û°Ô∏è Building $dir..."
          mvn -f $dir/pom.xml clean install -DskipTests
          service_name=$(basename "$dir" | tr '[:upper:]' '[:lower:]')
          echo "üê≥ Building Docker image..."
          docker build -t $DOCKER_ORG/$service_name:latest $dir
    
          echo "üöÄ Pushing Docker image..."
          docker push $DOCKER_ORG/$service_name:latest
    
          echo "üîç Scanning with Snyk..."
          snyk container monitor $DOCKER_ORG/$service_name:latest --severity-threshold=$SNYK_SEVERITY_THRESHOLD || exit 1
          echo "üìä SonarCloud scan for $dir"
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_ORG-$(basename $dir) \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.projectBaseDir=$dir \
            -Dsonar.java.binaries=$dir/target/classes \
            -Dsonar.projectVersion=1.0.${{ github.run_number }}
        done

