name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    SNYK_SEVERITY_THRESHOLD: high
    DOCKER_ORG: ${{ secrets.DOCKERHUB_USERNAME }}   # üëà L·∫•y t·ª´ secrets
    SONAR_ORG: ${{ secrets.SONARQUBE_ORG }}   # üëà L·∫•y t·ª´ secrets

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Install Maven manually
      run: |
        sudo apt-get update
        sudo apt-get install -y maven
        mvn --version
    - name: Install Snyk
      run: |
        npm install -g snyk

    - name: Authenticate Snyk
      run: |
        snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Build and push images using Docker Compose
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push || exit 1
    - name: Install Sonar Scanner
      run: |
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip sonar-scanner-cli-4.8.0.2856-linux.zip
        sudo mv sonar-scanner-cli-4.8.0.2856-linux /opt/sonar-scanner
        echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH
    - name: Build and push images using Docker Compose
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push

    - name: Build, test and scan services
      run: |
        # Find all directories containing pom.xml
        for dir in $(find . -name "pom.xml" -exec dirname {} \;); do
          echo "‚û°Ô∏è Processing service in $dir..."
          
          # Build with Maven (including tests)
          echo "üî® Building with Maven..."
          mvn -f "$dir/pom.xml" clean package
          
          # Get service name from directory name
          service_name=$(basename "$dir")
          image_name="$DOCKER_ORG/$service_name:latest"
          
          # Build Docker image
          echo "üê≥ Building Docker image $image_name..."
          docker build -t "$image_name" "$dir"
          
          # Push Docker image
          echo "üöÄ Pushing Docker image..."
          docker push "$image_name"
          
          # Snyk scan
          echo "üîç Scanning with Snyk..."
          snyk container test "$image_name" --severity-threshold=$SNYK_SEVERITY_THRESHOLD || exit 1
          
          # SonarCloud scan
          echo "üìä Running SonarCloud scan..."
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_ORG-$service_name \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.projectBaseDir="$dir" \
            -Dsonar.java.binaries="$dir/target/classes" \
            -Dsonar.projectVersion=1.0.${{ github.run_number }}
        done

