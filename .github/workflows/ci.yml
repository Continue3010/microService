name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SNYK_SEVERITY_THRESHOLD: high
  DOCKER_ORG: ${{ secrets.DOCKERHUB_USERNAME }}
  SONAR_ORG: ${{ secrets.SONARQUBE_ORG }}

jobs:
  ci-build-test-scan:
    name: Build, Test, Scan and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Maven
      run: |
        sudo apt-get update
        sudo apt-get install -y maven
        mvn --version

    - name: Install Security Tools
      run: |
        npm install -g snyk
        wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
        unzip sonar-scanner-cli-5.0.1.3006-linux.zip
        sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
        echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH
        sudo apt-get install -y wget
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy

    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build, Test and Scan
      run: |
        for pom in $(find . -name "pom.xml"); do
          dir=$(dirname "$pom")
          service_name=$(basename "$dir" | tr '[:upper:]' '[:lower:]')
          
          echo "‚û°Ô∏è Processing $service_name in $dir..."
          
          # Build and unit test
         mvn clean install -DskipTests=true

          
          # Code analysis
          BINARIES=$(find "$dir" -type d -path "$dir/target/classes" | paste -sd ":" -)
          if [ -n "$BINARIES" ]; then
            sonar-scanner \
              -Dsonar.projectKey=Continue3010_microService \
              -Dsonar.organization=continue3010 \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
              -Dsonar.projectBaseDir="$dir" \
              -Dsonar.sources=. \
              -Dsonar.java.binaries="$BINARIES" \
              -Dsonar.projectVersion=1.0.${{ github.run_number }}
          else
            echo "‚ö†Ô∏è No binaries found for SonarQube analysis in $dir"
          fi
          
          # Build Docker image
          docker build \
            -t $DOCKER_ORG/$service_name:latest \
            -t $DOCKER_ORG/$service_name:1.0.${{ github.run_number }} \
            "$dir"
            
          # Security scans
          echo "üîç Running security scans..."
          snyk container test $DOCKER_ORG/$service_name:latest --severity-threshold=$SNYK_SEVERITY_THRESHOLD || true
          trivy image --severity HIGH,CRITICAL --exit-code 1 $DOCKER_ORG/$service_name:latest || true
          
          # Push images
          echo "üöÄ Pushing Docker images..."
          docker push $DOCKER_ORG/$service_name:latest
          docker push $DOCKER_ORG/$service_name:1.0.${{ github.run_number }}
        done

    - name: Notify Success
      if: success()
      run: |
        echo "Pipeline succeeded!"
        # Add notification logic here

    - name: Notify Failure
      if: failure()
      run: |
        echo "Pipeline failed!"
        # Add notification logic here
